{
  "hash": "fd97fbaed051befb7d96bc90f12e9113",
  "result": {
    "markdown": "---\ntitle: \"letterbox slides\"\nsubtitle: \"quarto-revealjs-letterbox\"\nformat: letterbox-revealjs\n---\n\n\n## .image-right\n\n::: columns\n::: {.column width=\"45%\"}\nWe can use the `.image-right` and `.image-left` classes to insert images in the background\n\nThese images will be placed behind most other content\n:::\n:::\n\n![](flowers-two.jpeg){.image-right}\n\n## .image-left {style=\"text-align: right;\"}\n\n::: columns\n::: {.column width=\"55%\"}\n:::\n::: {.column width=\"45%\"}\nIt is therefore recommened that you use [multiple columns](https://quarto.org/docs/presentations/index.html#multiple-columns) to only have text on the background area\n:::\n:::\n\n![](flowers-two.jpeg){.image-left}\n\n## {background-image=\"https://placekitten.com/100/100\" background-size=\"100px\" background-repeat=\"repeat\"}\n\n::: r-fit-text\n[background images]{style=\"color: hotpink;\"}\n:::\n\n## Setting background colors {background-color=\"aquamarine\"}\n\nyou can set your background as you normally would\n\n## Video Slide Title {background-video=\"video.mp4\" background-video-loop=\"true\" background-video-muted=\"true\"}\n\nThis slides's background video will play in a loop with audio muted.\n\n## Slide Title {background-iframe=\"https://example.com\"}\n\n## Further Modifying theme\n\nIf you want to modify theme, you can specify the `.scss` my modifying the yaml to look like this\n\n``` yaml\nformat: \n  letterbox-revealjs:\n    theme: [default, style.scss]\n```\n\n## Modifying letterbox background\n\nThe background colors can be with with, where `#444444` represents the new background color and `#222222` represents the color of the shadow\n\n``` css\n.quarto-light {\n  background-color: #444444;\n}\n\n.quarto-dark {\n  background-color: #444444;\n}\n\n.slides {\n  box-shadow: #222222 0px 0px 30px 0px;\n}\n```\n\n## Quarto\n\nQuarto enables you to weave together content and executable code into a finished presentation. To learn more about Quarto presentations see <https://quarto.org/docs/presentations/>.\n\n## Bullets\n\nWhen you click the **Render** button a document will be generated that includes:\n\n-   Content authored with markdown\n-   Output from executable code\n\n## Code\n\nWhen you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}